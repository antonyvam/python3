############################################################
#
#    subplots
#
############################################################

import numpy as np
import matplotlib.pyplot as plt

def f(t):
    return np.exp(-t) * np.cos(2*np.pi*t)

t1 = np.arange(0.0, 5.0, 0.1)
t2 = np.arange(0.0, 5.0, 0.02)

def subplot2x1():
    # 2 rows and 1 col
    fig, (ax1, ax2) = plt.subplots(2, 1)
    ax1.plot(t1, f(t1), 'bo', t2, f(t2), 'k')
    ax2.plot(t2, np.cos(2*np.pi*t2), 'r--')

def subplot2x3():
    # 2 rows and 3 cols
    fig, ((ax1, ax2, ax3), (ax4, ax5, ax6)) = plt.subplots(2, 3)
    ax1.plot(t1, f(t1), 'bo', t2, f(t2), 'k')
    ax2.plot(t2, np.cos(2*np.pi*t2), 'r--')
    ax3.plot(t1, f(t1), 'bo', t2, f(t2), 'k')
    ax4.plot(t2, np.cos(2*np.pi*t2), 'r--')
    ax5.plot(t1, f(t1), 'bo', t2, f(t2), 'k')
    ax6.plot(t2, np.cos(2*np.pi*t2), 'r--')

def subplot3x2():
    plt.figure()        # create new figure
    nrows = 4
    ncols = 2
    for plotNo, style in zip(range(nrows*ncols), ['k', 'r--']*nrows):
        plt.subplot(nrows, ncols, plotNo+1)
        plt.plot(t2, np.cos(2*np.pi*t2), style)

subplot2x1()
subplot2x3()
subplot3x2()
plt.show()

